language: go

go:
- 1.12

matrix:
  include:
    - os: linux
      dist: xenial
      before_install:
        - sudo apt update
        - sudo apt-get install libasound2-dev libxcursor-dev libxinerama-dev libxi-dev libxrandr-dev libxxf86vm-dev
      env:
        - BINARY: "bubbles_linux_amd64"
    - os: osx
      osx_image: xcode10.1
      env:
        - BINARY: "bubbles_darwin_amd64"
    - os: linux  # windows build
      dist: xenial
      before_install:
        - sudo apt update
        - sudo apt-get install mingw-w64
      before_script:
        # export these 2 only here instead of env
        # because of go:generate quirks
        - export BINARY=bubbles_win32.exe
        - export CC=x86_64-w64-mingw32-gcc
        # gvm update runs after env section
        # hack for getting windows GOOS...
        - export GOOS=windows
        # why does it get reset to 0...?
        - export CGO_ENABLED=1
    - os: linux  # rpi build
      dist: xenial
      language: minimal
      env:
        - BINARY: "bubbles_linux_arm"
      install:  # completely replace install
        - curl -LO https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-2/qemu-arm-static
        - chmod a+x qemu-arm-static
        - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
        - sudo service docker restart
        - docker run --rm --privileged multiarch/qemu-user-static:register --reset
      script:  # completely replace script
        - |
          docker run -iv $(pwd)/qemu-arm-static:/usr/bin/qemu-arm-static \
                     -v$(pwd):/go/src/github.com/fopina/bubbles \
                     -w /go/src/github.com/fopina/bubbles \
                     -e BINARY \
                     fopina/misc:bubbles-arm-builder <<EOF
          make deps slim
          EOF

install:
  - make deps

script:
  - make bubbles

deploy:
  #- provider: releases
  #  api_key: "${GITHUB_TOKEN}"
  #  file: "${BINARY}"
  #  skip_cleanup: true
  #  draft: true
  #  on:
  #    tags: false
  #    branch: dev
  - provider: releases
    api_key: "${GITHUB_TOKEN}"
    file: "${BINARY}"
    skip_cleanup: true
    on:
      tags: true
